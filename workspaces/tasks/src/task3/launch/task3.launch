<launch>
	<node pkg="task3" type="ring_detector.py" name="ring_detector" output="screen" />
	<node pkg="task3" type="ellipse_locator2.py" name="ellipse_locator" output="screen" />
	<node pkg="task3" type="checkpoint_processor.py" name="checkpoint_processor_server" output="screen" />
	<node pkg="task3" type="get_checkpoints.py" name="get_checkpoints_server" output="screen" />
	<node pkg="task3" type="toroid_detector.py" name="toroid_detector" output="screen" />
	<node pkg="task3" type="extract_qr.py" name="extract_qr" output="screen" />
	<node pkg="task3" type="extract_qr2.py" name="extract_qr2" output="screen" />
	<node pkg="task3" type="extract_digits.py" name="extract_digits" output="screen" />
	<node pkg="task3" type="extract_cylinder.py" name="extract_cylinder" output="screen" />
	<node pkg="task3" type="master.py" name="master" output="screen" />
	<node pkg="task3" type="sound_player.py" name="sound_player" output="screen" />
	<node pkg="task3" type="terminal_approach.py" name="terminal_approach" output="screen" />
	<node pkg="task3" type="map_recognition.py" name="map_recognition" output="screen" />
	<node pkg="task3" type="treasure_locator.py" name="treasure_locator" output="screen" />
	<node pkg="task3" type="reconfig_demo.py" name="reconfig_demo" output="screen" />
	<node pkg="task3" type="ring_detector_axis.py" name="ring_detector_axis" output="screen" />
	<node pkg="sound_play" type="soundplay_node.py" name="soundplay_node" output="screen" />

	<node pkg="task3" type="cylinder_recognition" name="cylinder_recognition">
            <remap from="input" to="/camera/depth_registered/points"/>
	</node>


</launch>
