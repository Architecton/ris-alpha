// Generated by gencpp from file task2/FeatureBuilder.msg
// DO NOT EDIT!


#ifndef TASK2_MESSAGE_FEATUREBUILDER_H
#define TASK2_MESSAGE_FEATUREBUILDER_H

#include <ros/service_traits.h>


#include <task2/FeatureBuilderRequest.h>
#include <task2/FeatureBuilderResponse.h>


namespace task2
{

struct FeatureBuilder
{

typedef FeatureBuilderRequest Request;
typedef FeatureBuilderResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FeatureBuilder
} // namespace task2


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::task2::FeatureBuilder > {
  static const char* value()
  {
    return "74768431c7b5d3256bc92cadde0c032a";
  }

  static const char* value(const ::task2::FeatureBuilder&) { return value(); }
};

template<>
struct DataType< ::task2::FeatureBuilder > {
  static const char* value()
  {
    return "task2/FeatureBuilder";
  }

  static const char* value(const ::task2::FeatureBuilder&) { return value(); }
};


// service_traits::MD5Sum< ::task2::FeatureBuilderRequest> should match 
// service_traits::MD5Sum< ::task2::FeatureBuilder > 
template<>
struct MD5Sum< ::task2::FeatureBuilderRequest>
{
  static const char* value()
  {
    return MD5Sum< ::task2::FeatureBuilder >::value();
  }
  static const char* value(const ::task2::FeatureBuilderRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::task2::FeatureBuilderRequest> should match 
// service_traits::DataType< ::task2::FeatureBuilder > 
template<>
struct DataType< ::task2::FeatureBuilderRequest>
{
  static const char* value()
  {
    return DataType< ::task2::FeatureBuilder >::value();
  }
  static const char* value(const ::task2::FeatureBuilderRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::task2::FeatureBuilderResponse> should match 
// service_traits::MD5Sum< ::task2::FeatureBuilder > 
template<>
struct MD5Sum< ::task2::FeatureBuilderResponse>
{
  static const char* value()
  {
    return MD5Sum< ::task2::FeatureBuilder >::value();
  }
  static const char* value(const ::task2::FeatureBuilderResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::task2::FeatureBuilderResponse> should match 
// service_traits::DataType< ::task2::FeatureBuilder > 
template<>
struct DataType< ::task2::FeatureBuilderResponse>
{
  static const char* value()
  {
    return DataType< ::task2::FeatureBuilder >::value();
  }
  static const char* value(const ::task2::FeatureBuilderResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TASK2_MESSAGE_FEATUREBUILDER_H
