// Generated by gencpp from file task3/EllipseLocator.msg
// DO NOT EDIT!


#ifndef TASK3_MESSAGE_ELLIPSELOCATOR_H
#define TASK3_MESSAGE_ELLIPSELOCATOR_H

#include <ros/service_traits.h>


#include <task3/EllipseLocatorRequest.h>
#include <task3/EllipseLocatorResponse.h>


namespace task3
{

struct EllipseLocator
{

typedef EllipseLocatorRequest Request;
typedef EllipseLocatorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct EllipseLocator
} // namespace task3


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::task3::EllipseLocator > {
  static const char* value()
  {
    return "7b497188d656d59d92c0ddf8ac50fe8a";
  }

  static const char* value(const ::task3::EllipseLocator&) { return value(); }
};

template<>
struct DataType< ::task3::EllipseLocator > {
  static const char* value()
  {
    return "task3/EllipseLocator";
  }

  static const char* value(const ::task3::EllipseLocator&) { return value(); }
};


// service_traits::MD5Sum< ::task3::EllipseLocatorRequest> should match 
// service_traits::MD5Sum< ::task3::EllipseLocator > 
template<>
struct MD5Sum< ::task3::EllipseLocatorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::task3::EllipseLocator >::value();
  }
  static const char* value(const ::task3::EllipseLocatorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::task3::EllipseLocatorRequest> should match 
// service_traits::DataType< ::task3::EllipseLocator > 
template<>
struct DataType< ::task3::EllipseLocatorRequest>
{
  static const char* value()
  {
    return DataType< ::task3::EllipseLocator >::value();
  }
  static const char* value(const ::task3::EllipseLocatorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::task3::EllipseLocatorResponse> should match 
// service_traits::MD5Sum< ::task3::EllipseLocator > 
template<>
struct MD5Sum< ::task3::EllipseLocatorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::task3::EllipseLocator >::value();
  }
  static const char* value(const ::task3::EllipseLocatorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::task3::EllipseLocatorResponse> should match 
// service_traits::DataType< ::task3::EllipseLocator > 
template<>
struct DataType< ::task3::EllipseLocatorResponse>
{
  static const char* value()
  {
    return DataType< ::task3::EllipseLocator >::value();
  }
  static const char* value(const ::task3::EllipseLocatorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TASK3_MESSAGE_ELLIPSELOCATOR_H
