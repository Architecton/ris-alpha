// Generated by gencpp from file task3/CheckpointProcessor.msg
// DO NOT EDIT!


#ifndef TASK3_MESSAGE_CHECKPOINTPROCESSOR_H
#define TASK3_MESSAGE_CHECKPOINTPROCESSOR_H

#include <ros/service_traits.h>


#include <task3/CheckpointProcessorRequest.h>
#include <task3/CheckpointProcessorResponse.h>


namespace task3
{

struct CheckpointProcessor
{

typedef CheckpointProcessorRequest Request;
typedef CheckpointProcessorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CheckpointProcessor
} // namespace task3


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::task3::CheckpointProcessor > {
  static const char* value()
  {
    return "af3f94b765997022c6ac0867e7797cba";
  }

  static const char* value(const ::task3::CheckpointProcessor&) { return value(); }
};

template<>
struct DataType< ::task3::CheckpointProcessor > {
  static const char* value()
  {
    return "task3/CheckpointProcessor";
  }

  static const char* value(const ::task3::CheckpointProcessor&) { return value(); }
};


// service_traits::MD5Sum< ::task3::CheckpointProcessorRequest> should match 
// service_traits::MD5Sum< ::task3::CheckpointProcessor > 
template<>
struct MD5Sum< ::task3::CheckpointProcessorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::task3::CheckpointProcessor >::value();
  }
  static const char* value(const ::task3::CheckpointProcessorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::task3::CheckpointProcessorRequest> should match 
// service_traits::DataType< ::task3::CheckpointProcessor > 
template<>
struct DataType< ::task3::CheckpointProcessorRequest>
{
  static const char* value()
  {
    return DataType< ::task3::CheckpointProcessor >::value();
  }
  static const char* value(const ::task3::CheckpointProcessorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::task3::CheckpointProcessorResponse> should match 
// service_traits::MD5Sum< ::task3::CheckpointProcessor > 
template<>
struct MD5Sum< ::task3::CheckpointProcessorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::task3::CheckpointProcessor >::value();
  }
  static const char* value(const ::task3::CheckpointProcessorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::task3::CheckpointProcessorResponse> should match 
// service_traits::DataType< ::task3::CheckpointProcessor > 
template<>
struct DataType< ::task3::CheckpointProcessorResponse>
{
  static const char* value()
  {
    return DataType< ::task3::CheckpointProcessor >::value();
  }
  static const char* value(const ::task3::CheckpointProcessorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TASK3_MESSAGE_CHECKPOINTPROCESSOR_H
