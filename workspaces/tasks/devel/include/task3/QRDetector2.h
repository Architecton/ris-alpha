// Generated by gencpp from file task3/QRDetector2.msg
// DO NOT EDIT!


#ifndef TASK3_MESSAGE_QRDETECTOR2_H
#define TASK3_MESSAGE_QRDETECTOR2_H

#include <ros/service_traits.h>


#include <task3/QRDetector2Request.h>
#include <task3/QRDetector2Response.h>


namespace task3
{

struct QRDetector2
{

typedef QRDetector2Request Request;
typedef QRDetector2Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct QRDetector2
} // namespace task3


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::task3::QRDetector2 > {
  static const char* value()
  {
    return "74768431c7b5d3256bc92cadde0c032a";
  }

  static const char* value(const ::task3::QRDetector2&) { return value(); }
};

template<>
struct DataType< ::task3::QRDetector2 > {
  static const char* value()
  {
    return "task3/QRDetector2";
  }

  static const char* value(const ::task3::QRDetector2&) { return value(); }
};


// service_traits::MD5Sum< ::task3::QRDetector2Request> should match 
// service_traits::MD5Sum< ::task3::QRDetector2 > 
template<>
struct MD5Sum< ::task3::QRDetector2Request>
{
  static const char* value()
  {
    return MD5Sum< ::task3::QRDetector2 >::value();
  }
  static const char* value(const ::task3::QRDetector2Request&)
  {
    return value();
  }
};

// service_traits::DataType< ::task3::QRDetector2Request> should match 
// service_traits::DataType< ::task3::QRDetector2 > 
template<>
struct DataType< ::task3::QRDetector2Request>
{
  static const char* value()
  {
    return DataType< ::task3::QRDetector2 >::value();
  }
  static const char* value(const ::task3::QRDetector2Request&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::task3::QRDetector2Response> should match 
// service_traits::MD5Sum< ::task3::QRDetector2 > 
template<>
struct MD5Sum< ::task3::QRDetector2Response>
{
  static const char* value()
  {
    return MD5Sum< ::task3::QRDetector2 >::value();
  }
  static const char* value(const ::task3::QRDetector2Response&)
  {
    return value();
  }
};

// service_traits::DataType< ::task3::QRDetector2Response> should match 
// service_traits::DataType< ::task3::QRDetector2 > 
template<>
struct DataType< ::task3::QRDetector2Response>
{
  static const char* value()
  {
    return DataType< ::task3::QRDetector2 >::value();
  }
  static const char* value(const ::task3::QRDetector2Response&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TASK3_MESSAGE_QRDETECTOR2_H
