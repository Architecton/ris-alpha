// Generated by gencpp from file task1/EllipseLocator.msg
// DO NOT EDIT!


#ifndef TASK1_MESSAGE_ELLIPSELOCATOR_H
#define TASK1_MESSAGE_ELLIPSELOCATOR_H

#include <ros/service_traits.h>


#include <task1/EllipseLocatorRequest.h>
#include <task1/EllipseLocatorResponse.h>


namespace task1
{

struct EllipseLocator
{

typedef EllipseLocatorRequest Request;
typedef EllipseLocatorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct EllipseLocator
} // namespace task1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::task1::EllipseLocator > {
  static const char* value()
  {
    return "7b497188d656d59d92c0ddf8ac50fe8a";
  }

  static const char* value(const ::task1::EllipseLocator&) { return value(); }
};

template<>
struct DataType< ::task1::EllipseLocator > {
  static const char* value()
  {
    return "task1/EllipseLocator";
  }

  static const char* value(const ::task1::EllipseLocator&) { return value(); }
};


// service_traits::MD5Sum< ::task1::EllipseLocatorRequest> should match 
// service_traits::MD5Sum< ::task1::EllipseLocator > 
template<>
struct MD5Sum< ::task1::EllipseLocatorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::task1::EllipseLocator >::value();
  }
  static const char* value(const ::task1::EllipseLocatorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::task1::EllipseLocatorRequest> should match 
// service_traits::DataType< ::task1::EllipseLocator > 
template<>
struct DataType< ::task1::EllipseLocatorRequest>
{
  static const char* value()
  {
    return DataType< ::task1::EllipseLocator >::value();
  }
  static const char* value(const ::task1::EllipseLocatorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::task1::EllipseLocatorResponse> should match 
// service_traits::MD5Sum< ::task1::EllipseLocator > 
template<>
struct MD5Sum< ::task1::EllipseLocatorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::task1::EllipseLocator >::value();
  }
  static const char* value(const ::task1::EllipseLocatorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::task1::EllipseLocatorResponse> should match 
// service_traits::DataType< ::task1::EllipseLocator > 
template<>
struct DataType< ::task1::EllipseLocatorResponse>
{
  static const char* value()
  {
    return DataType< ::task1::EllipseLocator >::value();
  }
  static const char* value(const ::task1::EllipseLocatorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TASK1_MESSAGE_ELLIPSELOCATOR_H
